{"ast":null,"code":"var _jsxFileName = \"/home/danny/Coding Projects/autocomplete-app/src/components/Autocomplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Autocomplete() {\n  _s();\n\n  const [searchValue, setSearchValue] = useState('');\n  const [allStudents, setAllStudents] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  useEffect(() => {\n    axios.get('/students').then(resp => setAllStudents(resp.data.test2));\n  }, []);\n\n  const handleSuggestionClick = e => {\n    setSearchValue(e.target.innerText);\n  };\n\n  const getSuggestions = suggestions.map((suggestion, idx) => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: handleSuggestionClick,\n      children: suggestion\n    }, suggestion, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  });\n\n  const handleInputChange = e => {\n    console.log(e.target.value);\n    const searchSuggestions = allStudents.filter(suggestion => suggestion.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1);\n    setSearchValue(e.target.value);\n    setSuggestions(searchSuggestions);\n    setShowSuggestions(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      value: searchValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), showSuggestions && getSuggestions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Autocomplete, \"9rXLVxQBMCMgz3LPUF342RMDS+Y=\");\n\n_c = Autocomplete;\nexport default Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["/home/danny/Coding Projects/autocomplete-app/src/components/Autocomplete.js"],"names":["React","useEffect","useState","axios","Autocomplete","searchValue","setSearchValue","allStudents","setAllStudents","suggestions","setSuggestions","showSuggestions","setShowSuggestions","get","then","resp","data","test2","handleSuggestionClick","e","target","innerText","getSuggestions","map","suggestion","idx","handleInputChange","console","log","value","searchSuggestions","filter","toLowerCase","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZE,IAAAA,KAAK,CAACU,GAAN,CAAU,WAAV,EACCC,IADD,CACMC,IAAI,IAAIP,cAAc,CAACO,IAAI,CAACC,IAAL,CAAUC,KAAX,CAD5B;AAEH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,qBAAqB,GAAIC,CAAD,IAAO;AACjCb,IAAAA,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,SAAV,CAAd;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAGb,WAAW,CAACc,GAAZ,CAAgB,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACxD,wBAAO;AAAqB,MAAA,OAAO,EAAEP,qBAA9B;AAAA,gBAAsDM;AAAtD,OAASA,UAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFsB,CAAvB;;AAIA,QAAME,iBAAiB,GAAIP,CAAD,IAAO;AAC7BQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACC,MAAF,CAASS,KAArB;AACA,UAAMC,iBAAiB,GAAGvB,WAAW,CAACwB,MAAZ,CACtBP,UAAU,IAAIA,UAAU,CAACQ,WAAX,GAAyBC,OAAzB,CAAiCd,CAAC,CAACC,MAAF,CAASS,KAAT,CAAeG,WAAf,EAAjC,IAAiE,CAAC,CAD1D,CAA1B;AAGA1B,IAAAA,cAAc,CAACa,CAAC,CAACC,MAAF,CAASS,KAAV,CAAd;AACAnB,IAAAA,cAAc,CAACoB,iBAAD,CAAd;AACAlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GARD;;AAUA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAEP,WAA5B;AAAyC,MAAA,QAAQ,EAAEqB;AAAnD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKf,eAAe,IAAIW,cAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GApCQlB,Y;;KAAAA,Y;AAsCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nfunction Autocomplete() {\n    const [searchValue, setSearchValue] = useState('')\n    const [allStudents, setAllStudents] = useState([])\n    const [suggestions, setSuggestions] = useState([])\n    const [showSuggestions, setShowSuggestions] = useState(false)\n\n    useEffect(() => {\n        \n        axios.get('/students')\n        .then(resp => setAllStudents(resp.data.test2))\n    }, [])\n\n    const handleSuggestionClick = (e) => {\n        setSearchValue(e.target.innerText)\n    }\n\n    const getSuggestions = suggestions.map((suggestion, idx) => {\n        return <ul key={suggestion} onClick={handleSuggestionClick}>{suggestion}</ul>\n    })\n\n    const handleInputChange = (e) => {\n        console.log(e.target.value)\n        const searchSuggestions = allStudents.filter(\n            suggestion => suggestion.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1\n        )\n        setSearchValue(e.target.value)\n        setSuggestions(searchSuggestions)\n        setShowSuggestions(true)\n    }\n\n    return (\n        <div>\n            <input type=\"search\" value={searchValue} onChange={handleInputChange}></input>\n            {showSuggestions && getSuggestions}\n        </div>\n    )\n}\n\nexport default Autocomplete"]},"metadata":{},"sourceType":"module"}