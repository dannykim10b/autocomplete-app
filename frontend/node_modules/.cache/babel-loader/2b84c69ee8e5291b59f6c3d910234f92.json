{"ast":null,"code":"var _jsxFileName = \"/home/danny/Coding Projects/autocomplete-app/src/components/Autocomplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Autocomplete(props) {\n  _s();\n\n  const [value, setValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    axios.get('/students').then(resp => setSuggestions(resp.data.test2));\n    console.log(suggestions);\n  }, []);\n\n  const handleSuggestionClick = e => {\n    setValue(e.target);\n  };\n\n  const getSuggestions = suggestions.map((suggestion, idx) => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      name: suggestion,\n      onClick: handleSuggestionClick,\n      children: suggestion\n    }, suggestion, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  });\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n    console.log(value);\n  }; // onSubmit = () => {\n  //     null\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      value: value,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), getSuggestions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Autocomplete, \"7ycewx7C9e96raVcKsgNy5ZN7Ws=\");\n\n_c = Autocomplete;\nexport default Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["/home/danny/Coding Projects/autocomplete-app/src/components/Autocomplete.js"],"names":["React","useEffect","useState","axios","Autocomplete","props","value","setValue","suggestions","setSuggestions","get","then","resp","data","test2","console","log","handleSuggestionClick","e","target","getSuggestions","map","suggestion","idx","handleInputChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACO,GAAN,CAAU,WAAV,EACCC,IADD,CACOC,IAAI,IAAIH,cAAc,CAACG,IAAI,CAACC,IAAL,CAAUC,KAAX,CAD7B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMS,qBAAqB,GAAIC,CAAD,IAAO;AACjCX,IAAAA,QAAQ,CAACW,CAAC,CAACC,MAAH,CAAR;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAGZ,WAAW,CAACa,GAAZ,CAAgB,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACxD,wBAAO;AAAqB,MAAA,IAAI,EAAED,UAA3B;AAAuC,MAAA,OAAO,EAAEL,qBAAhD;AAAA,gBAAwEK;AAAxE,OAASA,UAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFsB,CAAvB;;AAIA,QAAME,iBAAiB,GAAIN,CAAD,IAAO;AAC7BX,IAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASb,KAAV,CAAR;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH,GAHD,CAlByB,CAyBzB;AACA;AACA;;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAEA,KAA5B;AAAmC,MAAA,QAAQ,EAAEkB;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKJ,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAtCQhB,Y;;KAAAA,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nfunction Autocomplete(props) {\n    const [value, setValue] = useState('')\n    const [suggestions, setSuggestions] = useState([])\n\n    useEffect(() => {\n        axios.get('/students')\n        .then( resp => setSuggestions(resp.data.test2) )\n        console.log(suggestions)\n    }, [])\n\n    const handleSuggestionClick = (e) => {\n        setValue(e.target)\n    }\n\n    const getSuggestions = suggestions.map((suggestion, idx) => {\n        return <ul key={suggestion} name={suggestion} onClick={handleSuggestionClick}>{suggestion}</ul>\n    })\n\n    const handleInputChange = (e) => {\n        setValue(e.target.value)\n        console.log(value)\n    }\n\n\n\n    // onSubmit = () => {\n    //     null\n    // }\n\n\n\n    return (\n        <div>\n            <h1>HI</h1>\n            <input type=\"search\" value={value} onChange={handleInputChange}></input>\n            {getSuggestions}\n        </div>\n    )\n}\n\nexport default Autocomplete"]},"metadata":{},"sourceType":"module"}